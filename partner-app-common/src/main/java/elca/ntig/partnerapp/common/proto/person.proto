syntax = "proto3";

package elca.ntig.partnerapp.common.proto;

import "language.proto";
import "sex_enum.proto";
import "marital_status.proto";
import "status.proto";
import "nationality.proto";

option java_multiple_files = true;
option java_package = "elca.ntig.partnerapp.common.proto.entity.person";

service PersonService{
  rpc getPersonById(GetPersonRequestProto) returns (PersonResponseProto){
  }

  rpc searchPeoplePagination(SearchPeoplePaginationRequestProto) returns (SearchPeoplePaginationResponseProto){
  }
}

message GetPersonRequestProto {
  uint32 id = 1;
}

message PersonResponseProto {
  uint32 id = 1;
  string lastName = 2;
  string firstName = 3;
  LanguageProto language = 4;
  SexEnumProto sex = 5;
  NationalityProto nationality = 6;
  string avsNumber = 7;
  string birthDate = 8;
  MaritalStatusProto maritalStatus = 9;
  string phoneNumber = 10;
  StatusProto status = 11;
}

message SearchPeopleCriteriasProto {
  string lastName = 2;
  string firstName = 3;
  LanguageProto language = 4;
  SexEnumProto sex = 5;
  NationalityProto nationality = 6;
  string avsNumber = 7;
  string birthDate = 8;
  repeated StatusProto status = 11;
}

message SearchPeoplePaginationRequestProto {
  uint32 pageNo = 1;
  uint32 pageSize = 2;
  string sortBy = 3;
  string sortDir = 4;
  SearchPeopleCriteriasProto criterias = 5;
}

message SearchPeoplePaginationResponseProto {
  uint32 pageNo = 1;
  uint32 pageSize = 2;
  uint32 totalPages = 3;
  uint64 totalRecords = 4;
  bool last = 5;
  repeated PersonResponseProto content = 6;
}

message CustomErrorPerson {
  string code = 1;
  string message = 2;
  string timestamp = 3;
}